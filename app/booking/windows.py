from datetime import date, timedelta, timezone
from aiogram_dialog import Window
from aiogram_dialog.widgets.kbd import Button, Group, ScrollingGroup, Select, Calendar, CalendarConfig, Back, Cancel, \
    Row
from aiogram_dialog.widgets.text import Const, Format

from app.booking.getters import get_all_tables, get_all_available_slots, get_confirmed_data
from app.booking.handlers import (process_add_count_capacity, on_table_selected,
                                      process_date_selected, process_slots_selected, on_confirmation, cancel_logic)
from app.booking.state import BookingState
from aiogram_dialog.widgets.media import StaticMedia
from aiogram.types import FSInputFile



def get_capacity_window() -> Window:
    """–û–∫–Ω–æ –≤—ã–±–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≥–æ—Å—Ç–µ–π."""
    return Window(
        Const("–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª-–≤–æ –≥–æ—Å—Ç–µ–π:"),
        Group(
            *[Button(
                text=Const(str(i)),
                id=str(i),
                on_click=process_add_count_capacity
            ) for i in range(1, 7)],
            Cancel(Const("–û—Ç–º–µ–Ω–∞"), on_click=cancel_logic),
            width=2
        ),
        state=BookingState.count
    )


def get_table_window() -> Window:
    return Window(
        Const("üìç –í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–æ–ª–∏–∫ –ø–æ —Å—Ö–µ–º–µ –Ω–∏–∂–µ:"),
        StaticMedia(
            path="static/kafe1.png",  # ‚úÖ –ø—Ä–æ–≤–µ—Ä—å, —á—Ç–æ —Ñ–∞–π–ª –ø–æ —ç—Ç–æ–º—É –ø—É—Ç–∏ —Ä–µ–∞–ª—å–Ω–æ –µ—Å—Ç—å
            type="photo"

        ),
        Group(
            Row(
                *[
                    Button(
                        Const(str(i)),
                        id=f"table_{i}",
                        on_click=on_table_selected
                    ) for i in range(1, 10)  # ‚ö†Ô∏è —É–∫–∞–∂–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–æ–ª–æ–≤ –ø–æ —Å—Ö–µ–º–µ
                ],
            ),
            width=4,  # –ø–æ 4 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥
        ),
        Group(
            Back(Const("–ù–∞–∑–∞–¥")),
            Cancel(Const("–û—Ç–º–µ–Ω–∞"), on_click=cancel_logic),
            width=2
        ),
        state=BookingState.table,
    )


def get_date_window() -> Window:
    """–û–∫–Ω–æ –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã."""
    return Window(
        Const("–ù–∞ –∫–∞–∫–æ–π –¥–µ–Ω—å –±—Ä–æ–Ω–∏—Ä—É–µ–º —Å—Ç–æ–ª–∏–∫?"),
        Calendar(
            id="cal",
            on_click=process_date_selected,
            config=CalendarConfig(
                firstweekday=0,
                timezone=timezone(timedelta(hours=3)),
                min_date=date.today()
            )
        ),
        Back(Const("–ù–∞–∑–∞–¥")),
        Cancel(Const("–û—Ç–º–µ–Ω–∞"), on_click=cancel_logic),
        state=BookingState.booking_date,
    )


def get_slots_window() -> Window:
    """–û–∫–Ω–æ –≤—ã–±–æ—Ä–∞ —Å–ª–æ—Ç–∞."""
    return Window(
        Format("{text_slots}"),
        ScrollingGroup(
            Select(
                Format("{item[start_time]} –¥–æ {item[end_time]}"),
                id="slotes_select",
                item_id_getter=lambda item: str(item["id"]),
                items="slots",
                on_click=process_slots_selected,
            ),
            id="slotes_scrolling",
            width=2,
            height=3,
        ),
        Back(Const("–ù–∞–∑–∞–¥")),
        Cancel(Const("–û—Ç–º–µ–Ω–∞"), on_click=cancel_logic),
        getter=get_all_available_slots,
        state=BookingState.booking_time,
    )


def get_confirmed_windows():
    return Window(
        Format("{confirmed_text}"),
        Group(
            Button(Const("–í—Å–µ –≤–µ—Ä–Ω–æ"), id="confirm", on_click=on_confirmation),
            Back(Const("–ù–∞–∑–∞–¥")),
            Cancel(Const("–û—Ç–º–µ–Ω–∞"), on_click=cancel_logic),
        ),
        state=BookingState.confirmation,
        getter=get_confirmed_data
    )