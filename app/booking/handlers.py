from datetime import date
from aiogram.types import CallbackQuery
from aiogram_dialog import DialogManager
from aiogram_dialog.widgets.kbd import Button
from app.booking.schemas import SCapacity, SNevBooking
from app.user.kbs import main_user_kb
# from app.config import broker
from app.dao.dao import BookingDAO, TimeSlotUserDAO, TableDAO


async def cancel_logic(callback: CallbackQuery, button: Button, dialog_manager: DialogManager):
    await callback.answer("–°—Ü–µ–Ω–∞—Ä–∏–π –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–º–µ–Ω–µ–Ω!")
    await callback.message.answer("–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ —Å—Ü–µ–Ω–∞—Ä–∏–π –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è.",
                                  reply_markup=main_user_kb(callback.from_user.id))


async def process_add_count_capacity(callback: CallbackQuery, button: Button, dialog_manager: DialogManager):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≥–æ—Å—Ç–µ–π."""
    session = dialog_manager.middleware_data.get("session_without_commit")
    selected_capacity = int(button.widget_id)
    dialog_manager.dialog_data["capacity"] = selected_capacity
    dialog_manager.dialog_data['tables'] = await TableDAO(session).find_all(SCapacity(capacity=selected_capacity))
    await callback.answer(f"–í—ã–±—Ä–∞–Ω–æ {selected_capacity} –≥–æ—Å—Ç–µ–π")
    await dialog_manager.next()


async def on_table_selected(callback: CallbackQuery, widget, dialog_manager: DialogManager, item_id: str):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Å—Ç–æ–ª–∞."""
    session = dialog_manager.middleware_data.get("session_without_commit")
    table_id = int(item_id)
    selected_table = await TableDAO(session).find_one_or_none_by_id(table_id)
    dialog_manager.dialog_data["selected_table"] = selected_table
    await callback.answer(f"–í—ã–±—Ä–∞–Ω —Å—Ç–æ–ª ‚Ññ{table_id} –Ω–∞ {selected_table.capacity} –º–µ—Å—Ç")
    await dialog_manager.next()


async def process_date_selected(callback: CallbackQuery, widget, dialog_manager: DialogManager, selected_date: date):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã."""
    dialog_manager.dialog_data["booking_date"] = selected_date
    session = dialog_manager.middleware_data.get("session_without_commit")
    selected_table = dialog_manager.dialog_data["selected_table"]
    slots = await BookingDAO(session).get_available_time_slots(table_id=selected_table.id, booking_date=selected_date)
    if slots:
        await callback.answer(f"–í—ã–±—Ä–∞–Ω–∞ –¥–∞—Ç–∞: {selected_date}")
        dialog_manager.dialog_data["slots"] = slots
        await dialog_manager.next()
    else:
        await callback.answer(f"–ù–µ—Ç –º–µ—Å—Ç –Ω–∞ {selected_date} –¥–ª—è —Å—Ç–æ–ª–∞ ‚Ññ{selected_table.id}!")
        await dialog_manager.back()


async def process_slots_selected(callback: CallbackQuery, widget, dialog_manager: DialogManager, item_id: str):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Å–ª–æ—Ç–∞."""
    session = dialog_manager.middleware_data.get("session_without_commit")
    slot_id = int(item_id)
    selected_slot = await TimeSlotUserDAO(session).find_one_or_none_by_id(slot_id)
    await callback.answer(f"–í—ã–±—Ä–∞–Ω–æ –≤—Ä–µ–º—è —Å {selected_slot.start_time} –¥–æ {selected_slot.end_time}")
    dialog_manager.dialog_data['selected_slot'] = selected_slot
    await dialog_manager.next()


async def on_confirmation(callback: CallbackQuery, widget, dialog_manager: DialogManager, **kwargs):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è."""
    session = dialog_manager.middleware_data.get("session_with_commit")

    # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    selected_table = dialog_manager.dialog_data['selected_table']
    selected_slot = dialog_manager.dialog_data['selected_slot']
    booking_date = dialog_manager.dialog_data['booking_date']
    user_id = callback.from_user.id
    check = await BookingDAO(session).check_available_bookings(table_id=selected_table.id,
                                                               time_slot_id=selected_slot.id,
                                                               booking_date=booking_date)
    if check:
        await callback.answer("–ü—Ä–∏—Å—Ç—É–ø–∞—é –∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—é")
        add_model = SNevBooking(user_id=user_id, table_id=selected_table.id,
                                time_slot_id=selected_slot.id, date=booking_date, status="booked")
        await BookingDAO(session).add(add_model)
        await callback.answer(f"–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ!")
        text = "–ë—Ä–æ–Ω—å —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞üî¢üç¥ –°–æ —Å–ø–∏—Å–∫–æ–º —Å–≤–æ–∏—Ö –±—Ä–æ–Ω–µ–π –º–æ–∂–Ω–æ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è –≤ –º–µ–Ω—é '–ú–û–ò –ë–†–û–ù–ò'"
        await callback.message.answer(text, reply_markup=main_user_kb(user_id))

        admin_text = (f"–í–Ω–∏–º–∞–Ω–∏–µ! –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {callback.from_user.id} –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–ª —Å—Ç–æ–ª–∏–∫  ‚Ññ{selected_table.id} "
                      f"–Ω–∞ {booking_date}. –í—Ä–µ–º—è –±—Ä–æ–Ω–∏ —Å {selected_slot.start_time} –¥–æ {selected_slot.end_time}")
        # await broker.publish(admin_text, "admin_msg")
        # await broker.publish(callback.from_user.id, "noti_user")
        await dialog_manager.done()
    else:
        await callback.answer("–ú–µ—Å—Ç–∞ –Ω–∞ —ç—Ç–æ—Ç —Å–ª–æ—Ç —É–∂–µ –∑–∞–Ω—è—Ç—ã!")
        await dialog_manager.back()
